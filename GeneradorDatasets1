#include <iostream>
#include <vector>
#include <fstream>
#include <cstdlib> // Para std::rand y std::srand
#include <ctime>   // Para std::time

// Función para generar un arreglo de tamaño variable
std::vector<int> generateArray(int size) {
    std::vector<int> arr(size);
    for (int i = 0; i < size; ++i) {
        arr[i] = size - i; // Números aleatorios entre 0 y 100.000
    }
    return arr;
}

int main() {
    std::srand(static_cast<unsigned>(std::time(0))); // Inicializa la semilla para números aleatorios

    std::vector<std::vector<int>> dataset;

    // Número de arreglos en el dataset
    const size_t numArrays = 1000;
    const size_t maxSize = 1000000;

    // Genera arreglos de tamaños variados
    for (int i = 0; i < numArrays; ++i) {
        int size = std::rand() % maxSize + 1; // Tamaño aleatorio entre 1 y 10000
        dataset.push_back(generateArray(size));
    }

    // Abre el archivo para escribir el dataset
    std::ofstream file("dataset6.csv");
    if (!file) {
        std::cerr << "No se pudo abrir el archivo para escribir.\n";
        return 1;
    }

    // Escribe el dataset en el archivo
    for (const auto& arr : dataset) {
        file << arr.size() << '\n'; // Escribe el tamaño del arreglo
        for (int elem : arr) {
            file << elem << ' '; // Escribe cada elemento del arreglo
        }
        file << '\n'; // Nueva línea al final de cada arreglo
    }

    file.close();
    std::cout << "Dataset guardado en 'dataset.txt'.\n";

    return 0;
}
